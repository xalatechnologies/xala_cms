name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ssh.xalatech.no >> ~/.ssh/known_hosts
      
          # SSH into the server and run deployment commands
          ssh -i ~/.ssh/id_rsa xalatech.no@ssh.xalatech.no "
            # Create the releases folder if it doesn't exist
            mkdir -p /www/releases &&
            mkdir -p /www/public &&
            
            # Create a timestamped release folder
            RELEASE_DIR=/www/releases/release_$(date +'%Y%m%d%H%M%S') &&
            mkdir -p \$RELEASE_DIR &&
            
            # Clone the repo into the new release folder
            git clone https://github.com/xalatechnologies/xala_cms.git \$RELEASE_DIR &&
      
            # Navigate into the release directory and install composer dependencies
            cd \$RELEASE_DIR &&
            composer install --no-dev --no-interaction --optimize-autoloader &&
            
            # Copy the existing .env file to the new release
            cp /www/.env \$RELEASE_DIR/.env &&
      
            # Ensure the storage folder is shared between releases
            rm -rf \$RELEASE_DIR/storage &&
            ln -s /www/storage \$RELEASE_DIR/storage &&
      
            # Update the index.php in public folder to point to the current release
            sed -i 's#require __DIR__.\'/../vendor/autoload.php\';#require __DIR__.\'/../current/vendor/autoload.php\';#' /www/public/index.php &&
            sed -i 's#\$app = require_once __DIR__.\'/../bootstrap/app.php\';#\$app = require_once __DIR__.\'/../current/bootstrap/app.php\';#' /www/public/index.php &&

            # Check if the filesystem is read-only and remount as read-write if necessary
            if mount | grep -q '/www.*ro'; then
              sudo mount -o remount,rw /www;
            fi

            # Symlink the new release to 'current'
            ln -nfs \$RELEASE_DIR /www/current &&
      
            # Set correct permissions
            chown -R xalatech.no:xalatech.no /www &&
            chmod -R 755 /www
          "